buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0.16,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'

    //Kotlin
    id 'org.jetbrains.kotlin.jvm' version '1.9.22'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.22'
}

apply plugin: 'org.spongepowered.mixin'
group = mod_group_id
version = mod_version

base {
    archivesName = mod_id
}

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: mapping_channel, version: mapping_version
    copyIdeResources = true
    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            workingDirectory project.file('run-data')

            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"
    config "${mod_id}.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral()
    maven {
        name = 'tterrag maven'
        url = 'https://maven.tterrag.com/'
    }
    maven {
        name = 'CurseMaven'
        url = 'https://cursemaven.com'
    }
    maven {
        name = 'Kotlin for Forge'
        url = 'https://thedarkcolour.github.io/KotlinForForge/'
    }
    maven {
        name = "Valkyrien Skies internal"
        url = 'https://maven.valkyrienskies.org'
        content {
            excludeGroup("org.spongepowered")
        }
    }
    maven {
        name = 'Minecraft forge'
        url = 'https://maven.minecraftforge.net/'
    }
    maven {//Apparently really important (If left out, gradle cant find the dependencies)
        name = "maven mirror for JEI files"
        url = "https://modmaven.dev"
    }
//    maven {
//        name = "Create Mod"
//        url = "https://maven.createmod.net"
//    }
}

dependencies {
    //Tterrag registrate
    implementation fg.deobf("com.tterrag.registrate:Registrate:${registrate_version}")

    //VS2
    implementation("org.valkyrienskies.core:api:${vs_core_version}")
    implementation("org.valkyrienskies.core:impl:${vs_core_version}")
    implementation("org.valkyrienskies.core:api-game:${vs_core_version}")
    implementation("org.valkyrienskies.core:util:${vs_core_version}")
    implementation fg.deobf("org.valkyrienskies:valkyrienskies-120-forge:${vs2_version}")

    //Forge
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    //Koltlin for Forge
    implementation 'thedarkcolour:kotlinforforge:4.10.0'

    //CDG
    implementation(fg.deobf("curse.maven:createdieselgenerators-869316:5401010"))
    //TFMG
    implementation(fg.deobf("curse.maven:createindustry-693815:5811638"))

    //Create
    implementation fg.deobf("com.simibubi.create:create-${create_minecraft_version}:${create_version}:slim") { transitive = false }
    implementation fg.deobf("com.jozufozu.flywheel:flywheel-forge-${create_minecraft_version}:${flywheel_version}")
//    implementation(fg.deobf("net.createmod.ponder:Ponder-Forge-1.20.1:1.0.52"))
//    compileOnly(fg.deobf("dev.engine-room.flywheel:flywheel-forge-api-1.20.1:1.0.0-215"))
//    runtimeOnly(fg.deobf("dev.engine-room.flywheel:flywheel-forge-1.20.1:1.0.0-215"))

    //Optional
    runtimeOnly fg.deobf("curse.maven:embeddium-908741:5681725")
    runtimeOnly fg.deobf("curse.maven:jei-238222:6600311")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version   : minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version       : forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id              : mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors         : mod_authors, mod_description: mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : mod_id,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : '1',
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    finalizedBy 'reobfJar'
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
